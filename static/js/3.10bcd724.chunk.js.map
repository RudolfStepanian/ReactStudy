{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","className","cl","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likeCount","MyPosts","memo","console","log","createRef","postElements","posts","reverse","map","postsBlock","PostReduxForm","onSubmit","values","addPost","newPostBody","maxLength","maxLengthCreator","minLength","minLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","store","ProfileContainer","componentDidMount","userId","match","params","history","getUserProfile","getStatus","compose","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.10bcd724.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3mdkt\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__GFcIm\",\"posts\":\"MyPosts_posts__3STay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2n0Vr\"};","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport cl from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        let a = this.state;\r\n        let b = this.props;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '-----'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}\r\n                           onChange={this.onStatusChange}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport cl from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] =  useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || '-----'}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       value={status}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport cl from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return(\r\n        <div>\r\n            <div className={cl.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport cl from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={cl.item}>\r\n        <img src='https://image.shutterstock.com/image-photo/beautiful-water-drop-on-dandelion-260nw-789676552.jpg'/>\r\n        {props.message}\r\n        <div>\r\n            <span>like</span> {props.likeCount}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport cl from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {\r\n    maxLenghtCreator,\r\n    maxLengthCreator,\r\n    minLenghtCreator,\r\n    minLengthCreator,\r\n    required\r\n} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo( (props) => {\r\n\r\n    console.log('RENDER');\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let postElements = [...props.posts]\r\n        .reverse()\r\n        .map(e => <Post message={e.message} likeCount={e.likeCount}/>);\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.onPostChange(text);\r\n    };\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n        postElements = props.posts\r\n            .map(e => <Post message={e.message} likeCount={e.likeCount}/>);\r\n    };\r\n\r\n    let addPost = (values) =>{\r\n        props.addPost(values.newPostBody)\r\n    };\r\n\r\n    return (<div className={cl.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={cl.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength = maxLengthCreator(10);\r\nconst minLength = minLengthCreator(2);\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name={'newPostBody'} placeholder='New post'\r\n               validate={[required,maxLength,minLength]}/>\r\n        {/*<Field >*/}\r\n        {/*            <textarea*/}\r\n        {/*                ref={props.newPostElement}*/}\r\n        {/*                onChange={props.onPostChange}*/}\r\n        {/*                value={props.newPostText}*/}\r\n        {/*            />*/}\r\n        {/*</Field>*/}\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts.jsx\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost : (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile.jsx'\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, setUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile,\r\n        userId: state.auth.userId,\r\n        status: state.profilePage.status\r\n});\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}