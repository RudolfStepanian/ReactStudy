{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","className","cl","message","DialogItem","path","id","dialog","activeClassName","active","name","Dialogs","dialogElements","dialogsPage","dialogs","map","d","key","messageElement","messages","el","newMessageBody","dialogsItem","DialogReduxForm","onSubmit","values","onSendMessageClick","maxLength","maxLengthCreator","minLength","minLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","AuthRedirectComponent","mapStateToProps","mapDispatchToProps","dispatch","addMessageActionCreate","compose"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uICG7MC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IACrCC,EADoC,uKAGlC,OAAIC,KAAKC,MAAMN,OAER,kBAACG,EAAcE,KAAKC,OAFG,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACVC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,sFCV9DM,EAJC,SAACJ,GACb,OAAO,yBAAKK,UAAWC,IAAGC,SAAUP,EAAMO,U,QCS/BC,EATI,SAACR,GAChB,IAAIS,EAAO,YAAcT,EAAMU,GAC/B,OACI,yBAAKL,UAAWC,IAAGK,QACf,kBAAC,IAAD,CAASC,gBAAiBN,IAAGO,OAAQZ,GAAIQ,GAAOT,EAAMc,Q,kECK5DC,EAAU,SAACf,GACb,IAAIgB,EAAiBhB,EAAMiB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYN,KAAMM,EAAEN,KAAMO,IAAKD,EAAEV,GAAIA,GAAIU,EAAEV,QAC/FY,EAAiBtB,EAAMiB,YAAYM,SAASJ,KAAI,SAAAK,GAAE,OAAI,kBAAC,EAAD,CAASjB,QAASiB,EAAGjB,QAASc,IAAKG,EAAGd,QAC3EV,EAAMiB,YAAYQ,eAMvC,OAAoB,GAAhBzB,EAAMN,OAAwB,kBAAC,IAAD,CAAUO,GAAI,WAE5C,yBAAKI,UAAWC,IAAGY,SACf,yBAAKb,UAAWC,IAAGoB,aACdV,GAEL,yBAAKX,UAAWC,IAAGiB,UACf,6BAAMD,GACN,kBAACK,EAAD,CAAiBC,SAZT,SAACC,GACjB7B,EAAM8B,mBAAmBD,EAAOJ,sBA0BlCM,EAAYC,YAAiB,IAC7BC,EAAYC,YAAiB,GAc7BP,EAAkBQ,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACnC,GAChB,OAAO,0BAAM4B,SAAU5B,EAAMqC,cACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACX1B,KAAM,iBACN2B,YAAY,qBACZC,SAAU,CAACC,IAASZ,EAAUE,KACrC,6BACI,qDAORW,EAAwBhD,YAAiBmB,GAEzC8B,EAAkB,SAACpD,GACnB,MAAO,CACHwB,YAAaxB,EAAMwB,YACnBvB,OAAQD,EAAME,KAAKD,SAIvBoD,EAAqB,SAACC,GACtB,MAAO,CACHjB,mBAAoB,SAACL,GACjBsB,EAASC,YAAuBvB,OAKnBtB,YAAQ0C,EAAiBC,EAAzB3C,CAA6CyC,GAEvDK,sBACX9C,YAAQ0C,EAAiBC,GACzBlD,IAFWqD,CAGblC","file":"static/js/5.12f60753.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__33txY\",\"dialogsItem\":\"Dialogs_dialogsItem__2-r67\",\"active\":\"Dialogs_active__CSJIT\",\"dialog\":\"Dialogs_dialog__2LRxs\",\"messages\":\"Dialogs_messages__4YL2g\",\"message\":\"Dialogs_message__1r-aN\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport cl from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={cl.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport cl from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={cl.dialog}>\r\n            <NavLink activeClassName={cl.active} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport cl from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addMessageActionCreate} from \"../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messageElement = props.dialogsPage.messages.map(el => <Message message={el.message} key={el.id}/>)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    };\r\n\r\n    if (props.isAuth == false) return <Redirect to={'/login'}/>;\r\n    return (\r\n        <div className={cl.dialogs}>\r\n            <div className={cl.dialogsItem}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={cl.messages}>\r\n                <div>{messageElement}</div>\r\n                <DialogReduxForm onSubmit={addNewMessage}/>\r\n                {/*<div>*/}\r\n                {/*    <textarea*/}\r\n                {/*        ref={newMessageBody}*/}\r\n                {/*        value={props.dialogsPage.newMessageText}*/}\r\n                {/*        onChange={onNewMessageChange}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div>*/}\r\n                {/*    <button onClick={onSendMessageClick}>send message</button>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(50);\r\nconst minLength = minLengthCreator(1);\r\n\r\nconst DialogForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea}\r\n               name={'newMessageBody'}\r\n               placeholder='Enter your message'\r\n               validate={[required,maxLength,minLength]}/>\r\n        <div>\r\n            <button>send message</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialogAddMessageForm'})(DialogForm);\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody) => {\r\n            dispatch(addMessageActionCreate(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n;"],"sourceRoot":""}